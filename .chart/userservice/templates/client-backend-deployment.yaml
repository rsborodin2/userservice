apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\scree\Downloads\kompose-windows-amd64.exe convert -c
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    {{- include "sample-app.labels" . | nindent 4 }}
    io.kompose.service: client-backend
  name: {{ include "sample-app.fullname" . }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sample-app.selectorLabels" . | nindent 6 }}
      io.kompose.service: client-backend
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\scree\Downloads\kompose-windows-amd64.exe convert -c
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: client-backend
        {{- include "sample-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - env:
            - name: SERVER_PORT
              value: '8181'
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://host.docker.internal/users?useSSL=false
          image: rborodin/userservice-app
          imagePullPolicy: IfNotPresent
          name: client-backend
          ports:
            - containerPort: 8181
              hostPort: 8181
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "sample-app.fullname" . }}
  annotations:
    kompose.cmd: C:\Users\scree\Downloads\kompose-windows-amd64.exe convert -c
    kompose.version: 1.31.2 (a92241f79)
  labels:
    io.kompose.service: client-backend
    {{- include "sample-app.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    io.kompose.service: client-backend
    {{- include "sample-app.selectorLabels" . | nindent 4 }}